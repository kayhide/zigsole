// Generated by CoffeeScript 1.3.3
(function() {
  var Loop;

  Loop = (function() {

    Loop.create = function(count) {
      var he, head, i, next, _i;
      if (count == null) {
        count = 1;
      }
      head = HalfEdge.create();
      he = head;
      for (i = _i = 1; 1 <= count ? _i < count : _i > count; i = 1 <= count ? ++_i : --_i) {
        next = HalfEdge.create();
        he.setNext(next);
        he = next;
      }
      he.setNext(head);
      return new Loop(head);
    };

    function Loop(edge) {
      var he, _i, _len, _ref;
      this.edge = edge;
      _ref = this.getEdges();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        he = _ref[_i];
        he.loop = this;
      }
    }

    Loop.prototype.getEdges = function() {
      var edges, he;
      edges = [this.edge];
      he = this.edge.next;
      while (he !== this.edge) {
        edges.push(he);
        he = he.next;
      }
      return edges;
    };

    Loop.prototype.getCurve = function() {
      var curves, he;
      curves = (function() {
        var _i, _len, _ref, _results;
        _ref = this.getEdges();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          he = _ref[_i];
          _results.push(he.curve);
        }
        return _results;
      }).call(this);
      return this.connectCurves(curves);
    };

    Loop.prototype.connectCurves = function(curves) {
      var points, pt, pts, _i, _j, _len, _len1, _ref;
      points = [];
      points.push(curves[0][0]);
      for (_i = 0, _len = curves.length; _i < _len; _i++) {
        pts = curves[_i];
        _ref = pts.slice(1);
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          pt = _ref[_j];
          points.push(pt);
        }
      }
      return points;
    };

    return Loop;

  })();

  this.Loop = Loop;

}).call(this);
