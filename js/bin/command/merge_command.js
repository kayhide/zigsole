// Generated by CoffeeScript 1.3.3
(function() {
  var MergeCommand,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  MergeCommand = (function(_super) {

    __extends(MergeCommand, _super);

    function MergeCommand(piece, mergee) {
      this.piece = piece;
      this.mergee = mergee;
    }

    MergeCommand.prototype.execute = function() {
      var edges, he, _i, _j, _len, _len1;
      edges = this.piece.edge.getLoopEdges();
      for (_i = 0, _len = edges.length; _i < _len; _i++) {
        he = edges[_i];
        if (he.mate.piece === this.mergee) {
          he.weld();
        }
      }
      if (this.piece.edge.isSolitary()) {
        this.piece.edge = null;
        for (_j = 0, _len1 = edges.length; _j < _len1; _j++) {
          he = edges[_j];
          if (!(!he.isSolitary())) {
            continue;
          }
          this.piece.setEdge(he);
          break;
        }
      }
      this.mergee.shape.parent.removeChild(this.mergee.shape);
      return this.piece.draw();
    };

    return MergeCommand;

  })(Command);

  this.MergeCommand = MergeCommand;

}).call(this);
