// Generated by CoffeeScript 1.12.7
(function() {
  var MergeCommand,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  MergeCommand = (function(superClass) {
    extend(MergeCommand, superClass);

    function MergeCommand(piece, mergee) {
      this.piece = piece;
      this.mergee = mergee;
      this.piece = this.piece.getEntity();
    }

    MergeCommand.prototype.execute = function() {
      var i, len, lp, ref;
      ref = this.mergee.loops;
      for (i = 0, len = ref.length; i < len; i++) {
        lp = ref[i];
        this.piece.addLoop(lp);
      }
      this.mergee.merger = this.piece;
      return this.piece.draw();
    };

    MergeCommand.prototype.isValid = function() {
      var ref;
      return ((ref = this.mergee) != null ? ref.isAlive() : void 0) && this.piece !== this.mergee;
    };

    return MergeCommand;

  })(Command);

  this.MergeCommand = MergeCommand;

}).call(this);
