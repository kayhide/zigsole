// Generated by CoffeeScript 1.12.7
(function() {
  var HalfEdge;

  HalfEdge = (function() {
    HalfEdge.create = function() {
      var he;
      he = new HalfEdge();
      he.mate = new HalfEdge();
      he.mate.mate = he;
      he.next = he.mate;
      he.mate.next = he;
      return he;
    };

    HalfEdge.next_id = 1;

    function HalfEdge() {
      this.point = new Point();
      this.next = null;
      this.mate = null;
      this.curve = null;
      this.facet = null;
      this.eid = HalfEdge.next_id;
      ++HalfEdge.next_id;
    }

    HalfEdge.prototype.prev = function() {
      var he;
      he = this.mate;
      while (he.next !== this) {
        he = he.next.mate;
      }
      return he;
    };

    HalfEdge.prototype.setPoint = function(pt) {
      var he, results;
      this.point = pt;
      he = this.mate.next;
      results = [];
      while (he !== this) {
        he.point = pt;
        results.push(he = he.mate.next);
      }
      return results;
    };

    HalfEdge.prototype.setNext = function(he) {
      this.next = he;
      return he.mate.next = this.mate;
    };

    HalfEdge.prototype.setMate = function(he) {
      if (this.mate === he) {
        return;
      }
      if (this.mate.prev() !== he.prev()) {
        this.mate.prev().next = he.mate.next;
      }
      if (he.mate.prev() !== this.prev()) {
        he.mate.prev().next = this.mate.next;
      }
      this.mate = he;
      return he.mate = this;
    };

    HalfEdge.prototype.setCurve = function(c) {
      var i;
      this.curve = c;
      return this.mate.curve = (function() {
        var j, ref, results;
        results = [];
        for (i = j = ref = c.length - 1; ref <= 0 ? j <= 0 : j >= 0; i = ref <= 0 ? ++j : --j) {
          results.push(c[i]);
        }
        return results;
      })();
    };

    HalfEdge.prototype.getCenter = function() {
      return this.point.add(this.next.point).scale(0.5);
    };

    HalfEdge.prototype.isSolitary = function() {
      return this.next === this.mate && this.next.mate === this;
    };

    HalfEdge.prototype.weld = function() {
      this.prev().next = this.mate.next;
      this.mate.prev().next = this.next;
      this.next = this.mate;
      return this.mate.next = this;
    };

    return HalfEdge;

  })();

  this.HalfEdge = HalfEdge;

}).call(this);
